{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-08-18T22:54:03.887Z",
    "end": "2023-08-18T22:54:07.004Z",
    "duration": 3117,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b93e98d2-a06f-481b-978b-8e39f9c8d147",
      "title": "",
      "fullFile": "C:\\Users\\G\\Desktop\\Proyecto-final\\Prueba-selenium\\tests\\login.spec.js",
      "file": "\\tests\\login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bdb852c4-2e1b-4bde-9476-27418b0ca2e3",
          "title": "Login",
          "fullFile": "C:\\Users\\G\\Desktop\\Proyecto-final\\Prueba-selenium\\tests\\login.spec.js",
          "file": "\\tests\\login.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login with standard_user credential",
              "fullTitle": "Login Login with standard_user credential",
              "timedOut": null,
              "duration": 2537,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Crea una instancia del controlador (driver) para el navegador Chrome\n      let driver = new Builder().forBrowser('chrome').build(); \n      try {\n          // Abre la página de inicio de sesión en el navegador\n          await driver.get('file:///C:/Users/G/Desktop/JRPO-Inmobiliaria/log-reg.html') \n          \n          //---\n          await driver.findElement(By.css('[data-test=\"login-button-emp\"]')).click();\n          // Encuentra el elemento de nombre de usuario mediante su id y envia la palabra \"usuario\" al input.\n          await driver.findElement(By.id('login-email')).sendKeys('admin@example.com') \n          // Encuntra el elemento de contraseña mediante su id y envia la palabra \"102030\" al input.\n          await driver.findElement(By.id('login-password')).sendKeys('1234') \n          // Encontra el botón de inicio de sesión por su selector CSS y hace clic en él\n          await driver.findElement(By.css('[data-test=\"login-button\"]')).click(); \n          // Hace una captura de pantalla utilizando la función takeScreenshot()\n          const screenshotData = await driver.takeScreenshot();\n          \n          // Guarda los datos de la captura de pantalla en un archivo llamado \"screenshot.png\"\n          fs.writeFileSync(\"screenshot.png\", screenshotData, \"base64\");\n          // Esperar 5 segundos (5000 milisegundos)\n          await driver.sleep(5000);\n      } finally {\n          // Cerrar la instancia del controlador y finalizar la prueba\n          await driver.quit(); \n      }",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[data-test=\"login-button-emp\"]\"}\n  (Session info: chrome=116.0.5845.96)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[data-test=\"login-button-emp\"]\"}\n  (Session info: chrome=116.0.5845.96)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async thenableWebDriverProxy.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\G\\Desktop\\Proyecto-final\\Prueba-selenium\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async thenableWebDriverProxy.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)",
                "diff": null
              },
              "uuid": "541eb99b-e3e6-4d03-89ac-895fbb3176c9",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "541eb99b-e3e6-4d03-89ac-895fbb3176c9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2537,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}